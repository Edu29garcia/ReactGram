{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport userService from \"../services/userService\";\nconst initialState = {\n  user: {},\n  error: false,\n  loading: false,\n  success: false,\n  message: null\n};\n\n//Função pegar os detalhes do usuario\nexport const profile = createAsyncThunk(\"user/profile\", async (user, thunkAPI) => {\n  const token = thunkAPI.getState().auth.user.token;\n  const data = await userService.profile(user, token);\n  return data;\n});\n\n// Atualizar os dados do usuário\nexport const updateProfile = createAsyncThunk(\"user/update\", async (user, thunkAPI) => {\n  const token = thunkAPI.getState.auth.user.token;\n  const data = await userService.updateProfile(user, token);\n\n  //verificar erro\n  if (data.errors) {\n    return thunkAPI.rejectWithValue(data.errors[0]);\n  }\n  return data;\n});\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    resetMessage: state => state.message = null\n  },\n  extraReducers: builder => {\n    builder.addCase(profile.pending, state => {\n      state.loading = true;\n      state.error = false;\n    }).addCase(profile.fulfilled, (state, action) => {\n      state.loading = false;\n      state.success = true;\n      state.error = null;\n      state.user = action.payload;\n    }).addCase(updateProfile.pending, state => {\n      state.loading = true;\n      state.error = false;\n    }).addCase(updateProfile.fulfilled, (state, action) => {\n      state.loading = false;\n      state.success = true;\n      state.error = null;\n      state.user = action.payload;\n      state.message = \"Usuário atualizado com sucesso\";\n    }).addCase(updateProfile.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n      state.user = null;\n    });\n  }\n});\nexport const {\n  resetMessage\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","userService","initialState","user","error","loading","success","message","profile","thunkAPI","token","getState","auth","data","updateProfile","errors","rejectWithValue","userSlice","name","reducers","resetMessage","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","reducer"],"sources":["C:/Users/eduar/Área de Trabalho/Estudos React/12 - REACTGRAM/frontend/src/slices/userSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport userService from \"../services/userService\";\r\n\r\nconst initialState = {\r\n  user: {},\r\n  error: false,\r\n  loading: false,\r\n  success: false,\r\n  message: null,\r\n};\r\n\r\n//Função pegar os detalhes do usuario\r\nexport const profile = createAsyncThunk(\r\n  \"user/profile\",\r\n  async (user, thunkAPI) => {\r\n    const token = thunkAPI.getState().auth.user.token;\r\n\r\n    const data = await userService.profile(user, token);\r\n\r\n    return data;\r\n  }\r\n);\r\n\r\n// Atualizar os dados do usuário\r\nexport const updateProfile = createAsyncThunk(\r\n  \"user/update\",\r\n  async (user, thunkAPI) => {\r\n    const token = thunkAPI.getState.auth.user.token;\r\n\r\n    const data = await userService.updateProfile(user, token);\r\n\r\n    //verificar erro\r\n    if (data.errors) {\r\n      return thunkAPI.rejectWithValue(data.errors[0]);\r\n    }\r\n    return data;\r\n  }\r\n);\r\n\r\nexport const userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState,\r\n  reducers: {\r\n    resetMessage: (state) => (state.message = null),\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(profile.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = false;\r\n      })\r\n      .addCase(profile.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.success = true;\r\n        state.error = null;\r\n        state.user = action.payload;\r\n      })\r\n      .addCase(updateProfile.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = false;\r\n      })\r\n      .addCase(updateProfile.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.success = true;\r\n        state.error = null;\r\n        state.user = action.payload;\r\n        state.message = \"Usuário atualizado com sucesso\";\r\n      })\r\n      .addCase(updateProfile.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n        state.user = null;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { resetMessage } = userSlice.actions;\r\nexport default userSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}