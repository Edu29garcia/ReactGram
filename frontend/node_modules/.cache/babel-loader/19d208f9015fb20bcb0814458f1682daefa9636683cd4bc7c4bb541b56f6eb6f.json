{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport authService from \"../services/authService\";\nconst user = JSON.parse(localStorage.getItem(\"user\"));\nconst initialState = {\n  user: user ? user : null,\n  error: false,\n  success: false,\n  loading: false\n};\n\n// Registro e login\n\nexport const register = createAsyncThunk(\"auth/register\", async (user, thunkAPI) => {\n  const data = await authService.register(user);\n\n  // Checar erros\n\n  if (data.erros) {\n    return thunkAPI.rejectWithValue(data.errors[0]);\n  }\n});","map":{"version":3,"names":["createSlice","createAsyncThunk","authService","user","JSON","parse","localStorage","getItem","initialState","error","success","loading","register","thunkAPI","data","erros","rejectWithValue","errors"],"sources":["C:/Users/eduar/Área de Trabalho/Estudos React/12 - REACTGRAM/frontend/src/slices/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport authService from \"../services/authService\";\r\n\r\nconst user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\nconst initialState = {\r\n  user: user ? user : null,\r\n  error: false,\r\n  success: false,\r\n  loading: false,\r\n};\r\n\r\n// Registro e login\r\n\r\nexport const register = createAsyncThunk(\r\n  \"auth/register\",\r\n  async (user, thunkAPI) => {\r\n    const data = await authService.register(user);\r\n\r\n    // Checar erros\r\n\r\n    if (data.erros) {\r\n      return thunkAPI.rejectWithValue(data.errors[0]);\r\n    }\r\n  }\r\n);\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,WAAW,MAAM,yBAAyB;AAEjD,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;AAErD,MAAMC,YAAY,GAAG;EACnBL,IAAI,EAAEA,IAAI,GAAGA,IAAI,GAAG,IAAI;EACxBM,KAAK,EAAE,KAAK;EACZC,OAAO,EAAE,KAAK;EACdC,OAAO,EAAE;AACX,CAAC;;AAED;;AAEA,OAAO,MAAMC,QAAQ,GAAGX,gBAAgB,CACtC,eAAe,EACf,OAAOE,IAAI,EAAEU,QAAQ,KAAK;EACxB,MAAMC,IAAI,GAAG,MAAMZ,WAAW,CAACU,QAAQ,CAACT,IAAI,CAAC;;EAE7C;;EAEA,IAAIW,IAAI,CAACC,KAAK,EAAE;IACd,OAAOF,QAAQ,CAACG,eAAe,CAACF,IAAI,CAACG,MAAM,CAAC,CAAC,CAAC,CAAC;EACjD;AACF,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}